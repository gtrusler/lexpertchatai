# Lexpert Case AI - Project Rules

## Project-Specific Configuration

- **Frontend Port**: Default http://localhost:5173
- **Backend Port**: Default http://localhost:8000
- **Primary Color**: Deep blue (#0078D4) for headers and buttons
- **Environment Variables**: Store in `.env` file in frontend directory with VITE\_ prefix

## Current Priority Focus

- Debugging Documents page blank screen issue
- Enhancing Templates feature with document connections
- Implementing proper error handling for Supabase operations
- Maintaining consistent loading states and user feedback

## Component Structure

- Follow established component hierarchy pattern:
  - Container components handle logic and state
  - Presentational components focus on UI
  - Error/loading states handled consistently across features

## Supabase Integration

- Direct storage uploads with proper bucket validation
- Row Level Security policies for all tables
- Admin-only write access for sensitive operations
- Authentication through Supabase Auth
- Specific error handling for Supabase operations

## Code Preservation Guidelines

- ALWAYS preserve existing functionality when adding new features
- Before modifying ANY code, thoroughly analyze how it currently works
- Make incremental changes that can be individually verified
- Focus changes ONLY on the specific task requested
- Maintain consistent patterns across the codebase
- Do not modify function signatures or APIs without explicit approval
- When fixing issues, use the smallest possible change to resolve the problem
- Preserve existing error handling, loading states, and user feedback mechanisms
- Test all existing functionality after making changes
- If unsure about potential side effects, present a plan before implementing

## Implementation Workflow

- For any significant change, follow this process:
  1. Analyze the existing code and identify all affected components
  2. Present a plan outlining specific changes and potential risks
  3. Wait for approval before implementing
  4. Make changes incrementally, testing after each step
  5. Verify both new and existing functionality works correctly
  6. Summarize what was changed and any areas to monitor
- ALWAYS kill any running server processes before starting new ones
- Check for processes running on ports 5173 and 8000 before launch
- Use appropriate commands to terminate processes (e.g., `lsof -i :5173` and `kill -9 PID`)

## Project-Specific Commands

- **Test Environment Variables**: Navigate to `/env-test` page
- **Check Document Upload**: Monitor browser console during upload
- **Test Supabase Connection**: Try direct API calls if components fail

## Debugging Tools

- Add `?debug=true` to URLs to enable enhanced console logging
- Set `DEBUG_SUPABASE=true` in localStorage for Supabase operation logging
- Use browser Storage tab to verify localStorage/sessionStorage values
- Check Network tab for failed Supabase requests

## When Debugging Issues

- Focus only on the specific issue being fixed
- Preserve unrelated functionality
- Consider the full component lifecycle
- Check for state management issues
- Verify Supabase connections and error handling
- Test across different browsers and viewport sizes
- Monitor console for errors during operations

## Component Style Guide

- Tailwind dark mode with `dark:` prefix
- Responsive designs with mobile-first approach
- Consistent spacing with Tailwind's spacing scale
- Proper loading states for all async operations
- Error feedback with user-friendly messages

## File Naming Conventions

- React components: PascalCase.tsx
- Utility functions: camelCase.ts
- Context providers: XxxContext.tsx
- Page components: PascalCase.tsx in pages directory

## IDE Shortcuts Reference

- Fix blank Documents page: Check Supabase connectivity and environment variables
- Debug template connections: Verify template_documents junction table
- Test document uploads: Monitor browser console during operations

## Key Project Links

- Project preview: http://localhost:5173
- API documentation: http://localhost:8000/docs
- Supabase dashboard: Check `.env` for URL
